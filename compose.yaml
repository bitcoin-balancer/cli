name: balancer

services:

  postgres:
    container_name: balancer-postgres
    image: postgres:16.3-alpine3.20
    restart: always
    user: postgres
    secrets:
      - POSTGRES_PASSWORD_FILE
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD_FILE=${POSTGRES_PASSWORD_FILE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: "10s"
      timeout: "5s"
      retries: "5"
    logging:
      driver: local
      options:
        max-size: "10m"
        max-file: "10"
        compress: "true"


  api:
    container_name: balancer-api
    build:
      context: ../api
      args:
        - NODE_ENV=${NODE_ENV}
    image: jesusgraterol/balancer-api:latest
    ports:
      - 5075:5075
    secrets:
      - POSTGRES_PASSWORD_FILE
      - ROOT_ACCOUNT
      - TELEGRAM
    environment:
      - NODE_ENV=${NODE_ENV}
      - TEST_MODE=true
      - RESTORE_MODE=false
      - API_PORT=5075
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD_FILE=${POSTGRES_PASSWORD_FILE}
      - ROOT_ACCOUNT=${ROOT_ACCOUNT}
      - TELEGRAM=${TELEGRAM}
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: local
      options:
        max-size: "10m"
        max-file: "10"
        compress: "true"




volumes:
  pgdata:
  pgdata-management:




secrets:
  POSTGRES_PASSWORD_FILE:
    file: secrets/POSTGRES_PASSWORD_FILE.txt
  ROOT_ACCOUNT:
    file: secrets/ROOT_ACCOUNT.txt
  TELEGRAM:
    file: secrets/TELEGRAM.txt